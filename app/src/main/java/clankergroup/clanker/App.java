/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clankergroup.clanker;

import com.pi4j.Pi4J;
import com.pi4j.context.Context;
import com.pi4j.io.gpio.digital.DigitalOutput;
import com.pi4j.io.gpio.digital.DigitalOutputConfigBuilder;
import com.pi4j.io.gpio.digital.DigitalState;
import com.pi4j.util.Console;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

public class App {

    
    private static final int PIN_LED_ONE = 26; // PIN 15 = BCM 22
    private static final int PIN_LED_TWO = 21; // PIN 15 = BCM 22
    private static final int PIN_LED_THREE = 20; // PIN 15 = BCM 22
    private static final int PIN_LED_FOUR = 16; // PIN 15 = BCM 22
    private static final int PIN_LED_RETURN = 19; // PIN 15 = BCM 22
    

    public App() {
        System.out.println("Start Clanker");
        final var console = new Console();
        console.title("<-- CLANKER -->", "Clanker DIODE");
        var pi4j = Pi4J.newAutoContext();
        PrintInfo.printLoadedPlatforms(console, pi4j);
        PrintInfo.printDefaultPlatform(console, pi4j);
        PrintInfo.printProviders(console, pi4j);
        System.out.println("Creating config..");
        var ledConfigOne = createLed(PIN_LED_ONE, pi4j);
        var ledConfigTwo = createLed(PIN_LED_TWO, pi4j);
        var ledConfigThree = createLed(PIN_LED_THREE, pi4j);
        var ledConfigFour = createLed(PIN_LED_FOUR, pi4j);
        var ledConfigReturn = createLed(PIN_LED_RETURN, pi4j);
        
        System.out.println("Config Led complete,");
        
        var ledOne = pi4j.create(ledConfigOne);
        var ledTwo = pi4j.create(ledConfigTwo);
        var ledThree = pi4j.create(ledConfigThree);
        var ledFour = pi4j.create(ledConfigFour);
        var ledReturn = pi4j.create(ledConfigReturn);
        
        
        System.out.println("Created LED");
        Random rando = new Random();
        for (int i = 0; i < 100; i++) {
            try {
                var v1 = rando.nextBoolean();
                var v2 = rando.nextBoolean();
                var v3 = rando.nextBoolean();
                var v4 = rando.nextBoolean();
                if(v1){
                    ledOne.high();
                }
                if(v2){
                    ledTwo.high();
                }
                if(v3){
                    ledThree.high();
                }
                if(v4){
                    ledFour.high();
                }
                Thread.sleep(200);
                ledOne.low();
                ledTwo.low();
                ledThree.low();
                ledFour.low();
                ledReturn.high();
                Thread.sleep(500);
                ledReturn.low();
                Thread.sleep(500);
                System.out.println("Sleep");
                
            } catch (InterruptedException ex) {
                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }
    public DigitalOutputConfigBuilder createLed(int location, Context pi4j){
        return DigitalOutput.newConfigBuilder(pi4j)
                .id("led"+location)
                .name("LED Flasher")
                .address(location)
                .shutdown(DigitalState.LOW)
                .initial(DigitalState.LOW)
                .provider("pigpio-digital-output");
    }
    public static void main(String[] args) {
        new App();
    }
}
